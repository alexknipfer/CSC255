PROG5	CSECT
	USING PROG5,15
*
***<STEP 1> INITIALIZE REGISTERS AND TABLES 
	SR	4,4	SET COUNT OF ENTRIES
	LA	3,TABLE	LOAD ADDRESS OF TABLE1
	LA	8,LGTABLE	LOAD ADDRESS OF TABLE2
	LA	13,SMTABLE	LOAD ADDRESS OF TABLE3
	SR	7,7	SUM OF VALUES
	SR	6,6	HOLDS TABLE VALUES
	SR	9,9	USED TO LOAD TABLES AGAIN
	SR	12,12	LOADS ADDRESSES IN TABLE3
	SR	11,11	VALUES EQUAL TO AVERAGE
*
***<STEP 2> PRINT INITIAL HEADER BEFORE LISTING VALUES
*
	XPRNT	=C'      TABLE VALUES'
*
***<STEP 3> READ DATA (NUMBERS) INTO TABLE
*
READ	XREAD	CARD,80	READ IN LINE
	BC	B'0100',SUM	BRANCH TO SUM IF EOF
	XDECI	2,CARD	CONVERT NUMBER
	XDECO	2,NUMLINE	PLACE NUMBER IN NUMLINE
	XPRNT	NUMLINE,80	PRINT NUMBER
	AR	7,2	ADD NUMBER TO SUM
	ST	2,0(3)	STORE NUMBER IN TABLE
	LA	4,1(4)	ADD 1 TO ENTRY COUNT
	LA	3,4(3)	LOAD NEXT ADDRESS
	BC	B'1111',READ	BRANCH TO READ
*
***<STEP 4> PRINT THE SUM OF THE NUMBERS
*
SUM	XDECO	7,SUMLINE+30	ADD SUM TO SUMLINE
	XPRNT	BLANK,80	PRINT BLANK LINE	
	XPRNT	SUMLINE,80	PRINT THE SUM
*
***<STEP 5> CALCULATE AND PRINT THE AVERAGE
*
AVG	DR	6,4	DIVIDE SUM TO GET AVG
	XDECO	7,AVERAGE+30	ADD AVERAGE TO LINE
	XPRNT	BLANK,80	PRINT BLANK LINE
	XPRNT	AVERAGE,80	PRINT THE AVERAGE
	XPRNT	BLANK,80	PRINT BLANK LINE
*
***<STEP 6> RELOAD TABLE TO READ VALUES
*
	L	6,TABLE	GET FIRST ENTRY OF TABLE
	LA	5,TABLE	GET ADDRESS OF FIRST ENTRY
	SR	2,2	NUMBERS LARGER THAN AVG
	SR	4,4	NUMBERS LESS THAN AVG
*
***<STEP 7> GET VALUES LESS AND GREATER THAN AVERAGE (AND EQUAL)
*
LOOP	CR	5,3	COMPARE ADDRESS TO SEE IF DONE
	BC	B'1000',PLARGE	IF EQUAL PRINT LARGER VALUES
	CR	6,7	COMPARE NUM TO AVG
	BC	B'0010',LARGER	IF LARGER BRANCH TO LARGER
	BC	B'0100',LESS	IF LESS BRANCH TO LESS
	BC	B'1000',EQUAL	IF EQUAL BRANCH TO EQUAL
*
CONT	A	5,FOUR	ADD FOUR TO ADDRESS
	L	6,0(5)	GET NEXT NUMBER
	CR	5,3	COMPARE ADDRESS TO SEE IF DONE
	BC	B'1000',PLARGE	IF EQUAL PRINT LARGER
	BC	B'1111',LOOP	ELSE BRANCH TO LOOP
*
*** LARGER STORES NUMBERS IN NEW TABLE
*** (ANY NUMBERS LARGER THAN AVERAGE WILL BE STORED HERE)
*
LARGER	A	2,ONE	ADD ONE TO COUNT
	ST	6,0(8)	STORE NUMBER IN NEW TABLE
	LA	8,4(8)	GET ADDRESS OF NEXT ENTRY
	A	5,FOUR	GET ADDRESS OF NEXT ENTRY
	L	6,0(5)	GET NEXT NUMBER
	CR	5,3	COMPARE ADDRESS TO SEE IF DONE
	BC	B'1111',LOOP	GET MORE NUMBERS
*
*** LESS STORES NUMERS IN NEW TABLE
*** (ANY NUMBERS LESS THAN AVERAGE WILL BE STORED HERE)
*
LESS	A	4,ONE	ADD ONE TO COUNT
	ST	6,0(13)	STORE NUMBER IN NEW TABLE
	LA	12,1(12)	GET ADDRESS FOR COUNT
	LA	13,4(13)	GET ADDRESS OF NEXT ENTRY
	A	5,FOUR	GET NEXT ENTRY ADDRESS
	L	6,0(5)	GET NEXT NUMBER	
	CR	5,3	COMPARE ADDRESS TO SEE IF DONE
	BC	B'1111',LOOP	GET MORE NUMBERS
*
*** THIS KEEPS TRACK OF NUMBERS EQUAL TO AVERAGE
*	
EQUAL	A	11,ONE	ADD ONE TO COUNT	
	BC	B'1111',CONT	CONTINUE GETTING NUMBERS
*
***<STEP 8> PRINT VALUES LESS THAN AND GREATER THAN AVERAGE
*
*** PLARGE PRINTS AMOUNT OF NUMBERS LARGER THAN AVERAGE
*
PLARGE	XPRNT	LGAVG,80	PRINT LABEL
	XDECO	2,LGAVG2+30	ADD TOTAL TO LINE
	XPRNT	LGAVG2,80	PRINT AMOUNT LARGER
	BC	B'1111',PTABLE2	GO PRINT THE VALUES
*
*** PRINT ALL VALUES LARGER THAN AVERAGE THAT ARE IN TABLE
*
PTABLE2	L	9,LGTABLE	GET FIRST VALUE
	LA	10,LGTABLE	GET FIRST ADDRESS
	XPRNT	LGAVG3,80	PRINT LABEL
PLOOP	XDECO	9,LARGEAVG	ADD VALUE TO LINE
	XPRNT	LARGEAVG,80	PRINT VALUE
	A	10,FOUR	GET NEXT ADDRESS
	L	9,0(10)	GET NEXT NUMBER
	CR	10,8	COMPARE ADDRESS TO SEE IF DONE
	BC	B'1000',PEQUAL	IF EQUAL PRINT VALUES EQUAL
	BC	B'1111',PLOOP	ELSE GET MORE NUMBERS
*
*** PEQUAL PRINTS AMOUNT OF VALUES EQUAL TO AVERAGE
*
PEQUAL	XPRNT	BLANK,80	PRINT BLANK LINE
	XPRNT	EQLAVG,80	PRINT LABEL
	XDECO	11,EQLAVG2+30	ADD AMOUNT TO LINE
	XPRNT	EQLAVG2,80	PRINT AMOUNT EQUAL
	XPRNT	BLANK,80	PRINT BLANK LINE
	BC	B'1111',PLESS	PRINT AMOUNT LESS
*
*** PLESS PRINTS AMOUNT OF VALUES LESS THAN AVERAGE
* 
PLESS	XPRNT	SMAVG,80	PRINT LABEL
	XDECO	4,SMAVG2+30	ADD AMOUNT TO LINE
	XPRNT	SMAVG2,80	PRINT AMOUNT LESS
	BC	B'1111',PTABLE3	GO PRINT THE VALUES
*
*** PTABLE3 PRINTS VALUES IN TABLE LESS THAN AVERAGE
*
PTABLE3	L	9,SMTABLE	GET FIRST NUMBER
	LA	10,SMTABLE	GET FIRST ADDRESS
	XPRNT	SMAVG3,80	PRINT LABEL
PLOOP2	XDECO	9,SMALLAVG	ADD VALUES TO LINE
	XPRNT	SMALLAVG,80	PRINT VALUE
	A	10,FOUR	GET NEXT ADDRESS
	L	9,0(10)	GET NEXT NUMBER
	CR	10,13	COMPARE ADDRESS TO SEE IF DONE
	BC	B'1000',DONE	GO TERMINATE PROGRAM
	BC	B'1111',PLOOP2	GET MORE NUMBERS
*
***<STEP 9> TERMINATE PROGRAM AND EXIT TO OPERATING SYSTEM
*
DONE	BCR	B'1111',14	TERMINATE PROGRAM
*
*****************************************************
*
TABLE	DS	40F	DECLARE TABLE OF 40 VALS
LGTABLE	DS	40F	DECLARE TABLE OF 40 VALS
SMTABLE	DS	40F	DECLARE TABLE OF 40 VALS
CARD	DS	CL80	CARD INPUT AREA
NUMLINE	DC	CL80'*'
LARGEVAL	DC	CL80'*'
LARGEAVG	DC	CL80'*'
SMALLAVG	DC	CL80'*'
AVERAGE	DC	CL80' THE AVERAGE OF THE VALUES IS:'
SUMLINE	DC	CL80' THE SUM OF THE VALUES IS:'
LGAVG	DC	CL80' THE NUMBER OF VALUES GREATER THAN'
LGAVG2	DC	CL80' THE AVERAGE IS:'
LGAVG3	DC	CL80' THEY ARE:'
EQLAVG	DC	CL80' THE NUMBER OF VALUES EQUAL TO'
EQLAVG2	DC	CL80' THE AVERAGE IS:'
SMAVG	DC	CL80' THE NUMBER OF VALUES LESS THAN'
SMAVG2	DC	CL80' THE AVERAGE IS:'
SMAVG3	DC	CL80' THEY ARE:'
BLANK	DC	CL80'*'
FOUR	DC	F'4'
ONE	DC	F'1'
*
	END	PROG5
$ENTRY	DATA5.TXT
